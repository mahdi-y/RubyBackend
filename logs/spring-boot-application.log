HTTP GET http://localhost:8761/eureka/apps/delta 
HTTP PUT http://localhost:8761/eureka/apps/PRODUIT-SERVICE/host.docker.internal:produit-service:8083?status=UP&lastDirtyTimestamp=1719843012242 
Accept=[application/json, application/xml, application/*+json, text/xml, application/*+xml] 
Accept=[application/json, application/xml, application/*+json, text/xml, application/*+xml] 
Response 200 OK 
Response 200 OK 
Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications] 
Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC 
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a6f23cf, started on Mon Jul 01 16:10:08 CEST 2024 
Unregistering application PRODUIT-SERVICE with eureka with status DOWN 
Saw local status change event StatusChangeEvent [timestamp=1719843048593, current=DOWN, previous=UP] 
DiscoveryClient_PRODUIT-SERVICE/host.docker.internal:produit-service:8083: registering service... 
HTTP POST http://localhost:8761/eureka/apps/PRODUIT-SERVICE 
Accept=[application/json, application/xml, application/*+json, text/xml, application/*+xml] 
Writing [InstanceInfo [instanceId = host.docker.internal:produit-service:8083, appName = PRODUIT-SERVICE, hostName = host.docker.internal, status = DOWN, ipAddr = 192.168.1.48, port = 8083, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@30625ae0] as "application/json" 
Stopping beans in phase 2147483647 
Bean 'webServerGracefulShutdown' completed its stop procedure 
Stopping beans in phase 2147483646 
Response 204 NO_CONTENT 
DiscoveryClient_PRODUIT-SERVICE/host.docker.internal:produit-service:8083 - registration status: 204 
Bean 'webServerStartStop' completed its stop procedure 
Stopping beans in phase 0 
Shutting down ExecutorService 'applicationTaskExecutor' 
Shutting down ExecutorService 'taskScheduler' 
Unregistering JMX-exposed beans on shutdown 
Unregistering JMX-exposed beans 
Closing FeignContext-stock-service, started on Mon Jul 01 16:10:10 CEST 2024, parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a6f23cf 
Closing FeignContext-user-service, started on Mon Jul 01 16:10:10 CEST 2024, parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a6f23cf 
Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String 
Closing JPA EntityManagerFactory for persistence unit 'default' 
HHH000031: Closing 
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6b781cac] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5f7d5fde] 
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries 
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries 
HikariPool-2 - Shutdown initiated... 
HikariPool-2 - Shutdown completed. 
Shutting down DiscoveryClient ... 
Unregistering ... 
HTTP DELETE http://localhost:8761/eureka/apps/PRODUIT-SERVICE/host.docker.internal:produit-service:8083 
Accept=[application/json, application/xml, application/*+json, text/xml, application/*+xml] 
Response 200 OK 
DiscoveryClient_PRODUIT-SERVICE/host.docker.internal:produit-service:8083 - deregister  status: 200 
Completed shut down of DiscoveryClient 
Starting ProduitApplication using Java 17.0.9 on DESKTOP-7V4TGT0 with PID 2020 (C:\Users\balho\Desktop\RubyBackend\Produit-Service\target\classes started by Yassin in C:\Users\balho\Desktop\RubyBackend) 
No active profile set, falling back to 1 default profile: "default" 
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable 
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' 
Bootstrapping Spring Data JPA repositories in DEFAULT mode. 
Finished Spring Data repository scanning in 244 ms. Found 1 JPA repository interfaces. 
BeanFactory id=3e85ad62-3ac8-341d-898f-36ae2d9798c9 
Tomcat initialized with port(s): 8083 (http) 
Starting service [Tomcat] 
Starting Servlet engine: [Apache Tomcat/9.0.60] 
At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time. 
Initializing Spring embedded WebApplicationContext 
Root WebApplicationContext: initialization completed in 5026 ms 
HikariPool-1 - Starting... 
HikariPool-1 - Start completed. 
H2 console available at '/h2-console'. Database available at 'jdbc:postgresql://host.docker.internal:5432/Ruby1' 
Filter 'resourceUrlEncodingFilter' configured for use 
HHH000204: Processing PersistenceUnitInfo [name: default] 
HHH000412: Hibernate ORM core version 5.6.7.Final 
HCANN000001: Hibernate Commons Annotations {5.1.2.Final} 
HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect 
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
Initialized JPA EntityManagerFactory for persistence unit 'default' 
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning 
LiveReload server is running on port 35729 
24 mappings in 'requestMappingHandlerMapping' 
Exposing 1 endpoint(s) beneath base path '/actuator' 


Using generated security password: 50fca921-e083-4e1f-92e7-3d338d4d5a20

This generated password is for development use only. Your security configuration must be updated before running your application in production.
 
Patterns [/swagger-ui/] in 'viewControllerHandlerMapping' 
Patterns [/swagger-ui*/*swagger-initializer.js, /swagger-ui*/**, /swagger-ui/**] in 'resourceHandlerMapping' 
Will not secure any request 
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice 
ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice 
File system access not preferred: using SpringTemplateLoader 
Eureka HTTP Client uses RestTemplate. 
Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
Setting initial instance status as: STARTING 
Initializing Eureka in region us-east-1 
Resolving eureka endpoints via configuration 
Disable delta property : false 
Single vip registry refresh property : null 
Force full registry fetch : false 
Application is null : false 
Registered Applications size is zero : true 
Application version is -1: true 
Getting all instance registry info from the eureka server 
HTTP GET http://localhost:8761/eureka/apps/ 
Accept=[application/json, application/xml, application/*+json, text/xml, application/*+xml] 
Response 200 OK 
Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications] 
The response status is 200 
Starting heartbeat executor: renew interval is: 30 
InstanceInfoReplicator onDemand update allowed rate per min is 4 
Discovery Client initialized at timestamp 1719854891245 with initial instances count: 0 
Registering application PRODUIT-SERVICE with eureka with status UP 
Saw local status change event StatusChangeEvent [timestamp=1719854891249, current=UP, previous=STARTING] 
DiscoveryClient_PRODUIT-SERVICE/host.docker.internal:produit-service:8083: registering service... 
HTTP POST http://localhost:8761/eureka/apps/PRODUIT-SERVICE 
Accept=[application/json, application/xml, application/*+json, text/xml, application/*+xml] 
Writing [InstanceInfo [instanceId = host.docker.internal:produit-service:8083, appName = PRODUIT-SERVICE, hostName = host.docker.internal, status = UP, ipAddr = 192.168.1.48, port = 8083, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@5713f84f] as "application/json" 
Tomcat started on port(s): 8083 (http) with context path '/SpringMVC' 
Updating port to 8083 
Response 204 NO_CONTENT 
DiscoveryClient_PRODUIT-SERVICE/host.docker.internal:produit-service:8083 - registration status: 204 
Started ProduitApplication in 14.568 seconds (JVM running for 16.817) 
Disable delta property : false 
Single vip registry refresh property : null 
Force full registry fetch : false 
Application is null : false 
Registered Applications size is zero : true 
Application version is -1: false 
Getting all instance registry info from the eureka server 
HTTP GET http://localhost:8761/eureka/apps/ 
Accept=[application/json, application/xml, application/*+json, text/xml, application/*+xml] 
HTTP PUT http://localhost:8761/eureka/apps/PRODUIT-SERVICE/host.docker.internal:produit-service:8083?status=UP&lastDirtyTimestamp=1719854891249 
Response 200 OK 
Reading to [org.springframework.cloud.netflix.eureka.http.EurekaApplications] 
The response status is 200 
Accept=[application/json, application/xml, application/*+json, text/xml, application/*+xml] 
Response 200 OK 
Unregistering application PRODUIT-SERVICE with eureka with status DOWN 
Saw local status change event StatusChangeEvent [timestamp=1719854928700, current=DOWN, previous=UP] 
DiscoveryClient_PRODUIT-SERVICE/host.docker.internal:produit-service:8083: registering service... 
HTTP POST http://localhost:8761/eureka/apps/PRODUIT-SERVICE 
Accept=[application/json, application/xml, application/*+json, text/xml, application/*+xml] 
Writing [InstanceInfo [instanceId = host.docker.internal:produit-service:8083, appName = PRODUIT-SERVICE, hostName = host.docker.internal, status = DOWN, ipAddr = 192.168.1.48, port = 8083, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@5713f84f] as "application/json" 
Response 204 NO_CONTENT 
DiscoveryClient_PRODUIT-SERVICE/host.docker.internal:produit-service:8083 - registration status: 204 
Closing JPA EntityManagerFactory for persistence unit 'default' 
HikariPool-1 - Shutdown initiated... 
HikariPool-1 - Shutdown completed. 
Shutting down DiscoveryClient ... 
Unregistering ... 
HTTP DELETE http://localhost:8761/eureka/apps/PRODUIT-SERVICE/host.docker.internal:produit-service:8083 
Accept=[application/json, application/xml, application/*+json, text/xml, application/*+xml] 
Response 200 OK 
DiscoveryClient_PRODUIT-SERVICE/host.docker.internal:produit-service:8083 - deregister  status: 200 
Completed shut down of DiscoveryClient 
